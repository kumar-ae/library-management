KUMAR A E..(Assignment) - Library Management System

class Book:
    def __init__(self, book_id, title, author, publisher, pages, stock):
        self.book_id = book_id
        self.title = title
        self.author = author
        self.publisher = publisher
        self.pages = pages
        self.stock = stock

class Member:
    def __init__(self, member_id, name, phone, email, address):
        self.member_id = member_id
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address
        self.books_issued = []

class Transaction:
    def __init__(self, book, member, issue_date, due_date):
        self.book = book
        self.member = member
        self.issue_date = issue_date
        self.due_date = due_date

class Library:
    def __init__(self):
        self.books = []
        self.members = []
        self.transactions = []

    # Book related functions
    def add_book(self, book_id, title, author, publisher, pages, stock):
        book = Book(book_id, title, author, publisher, pages, stock)
        self.books.append(book)
        print(f"Book '{book.title}' added to library.")

    def remove_book(self, book_id):
        for book in self.books:
            if book.book_id == book_id:
                self.books.remove(book)
                print(f"Book '{book.title}' removed from library.")
                break
        else:
            print(f"Book with ID '{book_id}' not found in library.")

    def update_book(self, book_id, title=None, author=None, publisher=None, pages=None, stock=None):
        for book in self.books:
            if book.book_id == book_id:
                if title:
                    book.title = title
                if author:
                    book.author = author
                if publisher:
                    book.publisher = publisher
                if pages:
                    book.pages = pages
                if stock is not None:
                    book.stock = stock
                print(f"Book with ID '{book_id}' updated.")
                break
        else:
            print(f"Book with ID '{book_id}' not found in library.")

    def search_book(self, title=None, author=None):
        for book in self.books:
            if (not title or title.lower() in book.title.lower()) and (not author or author.lower() in book.author.lower()):
                print(f"Book ID: {book.book_id}, Title: {book.title}, Author: {book.author}, Publisher: {book.publisher}, Pages: {book.pages}, Stock: {book.stock}")

    # Member related functions
    def add_member(self, member_id, name, phone, email, address):
        member = Member(member_id, name, phone, email, address)
        self.members.append(member)
        print(f"Member '{member.name}' added to library.")

    def remove_member(self, member_id):
        for member in self.members:
            if member.member_id == member_id:
                self.members.remove(member)
                print(f"Member '{member.name}' removed from library.")
                break
        else:
            print(f"Member with ID '{member_id}' not found in library.")

    def update_member(self, member_id, name=None, phone=None, email=None, address=None):
        for member in self.members:
            if member.member_id == member_id:
                if name:
                    member.name = name
                if phone:
                    member.phone = phone
                if email:
                    member.email = email
                if address:
                    member.address = address
        else:           
          print(f"Member with ID '{member_id}' updated")
